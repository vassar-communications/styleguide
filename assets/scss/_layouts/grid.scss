$breakpoints: 25em, 37.5em, 50em, 62.5em;
$labels: tiny, small, med, large;

.grid {
	
	margin: 0 0 3em 0;

	@include small() {
		flex-wrap: wrap;
	}
	
	.grid-item {
		padding: 0.4em;
	}
	&.padding-medium {
		.grid-item {
			padding: 1em;
		}
	}
	&.padding-large {
		.grid-item {
			padding: 2em;
		}
	}
	
	&.has-border {
		border-top: 1px solid $border-color;
		border-left: 1px solid $border-color;
		// margin: 0 -1px -1px 0;		
		
		.grid-item {
			border-right: 1px solid $border-color;
			border-bottom: 1px solid $border-color;
		}
	}
	
	&.grid--two-across {
		display: flex;

		.grid-item {
			width: 50%;
		}
		&-small {
			@include small() {
				display: flex;
	
				.grid-item {
					width: 50%;
				}
			}
		}
		&-med {
			@include medium() {
				display: flex;
	
				.grid-item {
					width: 50%;
				}
			}
		}
		&-large {
			@include large() {
				display: flex;
	
				.grid-item {
					width: 50%;
				}
			}
		}
	}

	&.grid--three-across {
		display: flex;

		.grid-item {
			width: 33.33%;
		}
		&-small {
			@include small() {
				display: flex;
	
				.grid-item {
					width: 33.33%;
				}
			}
		}
		&-med {
			@include medium() {
				display: flex;
	
				.grid-item {
					width: 33.33%;
				}
			}
		}
		&-large {
			@include large() {
				display: flex;
	
				.grid-item {
					width: 33.33%;
				}
			}
		}
	}
	&.grid--four-across {
		.grid-item {
			@include small() {
				width: 50%;
			}
			@include medium() {
				width: 25%;
			}
			@include large() {
				width: 25%;
			}
		}
	}
}

@mixin generate_cols($label) {
  $numberOfColumns: 10;
  @for $i from 1 to ($numberOfColumns + 1) {
    $i: $i*10;  
    .#{$label}-#{$i} {
      width: $i*1%;
    }
  }  
}
@mixin grid($breakpoint, $designator) {
	@media screen and (min-width: #{$breakpoint}px) {
	  @include generate_cols(#{$designator});
	}
}

@for $i from 1 to (length($breakpoints) + 1) {
	@include grid(nth($breakpoints, $i), nth($labels, $i));
}


